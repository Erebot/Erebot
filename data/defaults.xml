<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <parameters>
        <parameter key="general.version">0.5.1</parameter>
        <parameter key="general.timezone">Europe/Paris</parameter>

        <parameter key="logging.classes.formatter">\Plop\Formatter</parameter>
        <parameter key="logging.classes.handler">\Plop\Handler\Stream</parameter>
        <parameter key="logging.classes.logger">\Plop\Logger</parameter>

        <parameter key="i18n.default_getter" type="collection">
            <parameter>Locale</parameter>
            <parameter>getDefault</parameter>
        </parameter>

        <parameter key="core.classes.core">\Erebot\Core</parameter>
        <parameter key="core.classes.connection">\Erebot\IrcConnection</parameter>
        <parameter key="core.classes.connection_factory">\Erebot\ConnectionFactory</parameter>
        <parameter key="core.classes.i18n">\Erebot\Intl</parameter>
        <parameter key="core.classes.identity">\Erebot\Identity</parameter>
        <parameter key="core.classes.timer">\Erebot\Timer</parameter>
        <parameter key="core.classes.eventhandler">\Erebot\EventHandler</parameter>
        <parameter key="core.classes.numerichandler">\Erebot\NumericHandler</parameter>
    </parameters>

    <services>
        <service id="logging.formatter.detailed" class="%logging.classes.formatter%">
            <argument>%%(asctime)s &lt;%%(levelname)-7s&gt; * %%(message)s</argument>
        </service>

        <service id="logging.formatter.input" class="%logging.classes.formatter%">
            <argument>%%(asctime)s &lt;%%(levelname)-7s&gt; &#8592; %(message)s</argument>
        </service>

        <service id="logging.formatter.output" class="%logging.classes.formatter%">
            <argument>%%(asctime)s &lt;%%(levelname)-7s&gt; &#8594; %%(message)s</argument>
        </service>

        <service id="logging.handler.input" class="%logging.classes.handler%">
            <argument type="constant">STDERR</argument>
            <call method="setFormatter">
                <argument type="service" id="logging.formatter.input"/>
            </call>
        </service>

        <service id="logging.handler.output" class="%logging.classes.handler%">
            <argument type="constant">STDERR</argument>
            <call method="setFormatter">
                <argument type="service" id="logging.formatter.output"/>
            </call>
        </service>

        <service id="logging.handler.detailed" class="%logging.classes.handler%">
            <argument type="constant">STDERR</argument>
            <call method="setFormatter">
                <argument type="service" id="logging.formatter.detailed"/>
            </call>
        </service>

        <service id="logging.logger.input" class="%logging.classes.logger%">
            <argument>Erebot</argument>
            <argument>LineIO</argument>
            <argument>getLine</argument>
            <argument type="service">
                <service class="\Plop\HandlersCollection">
                    <call method="offsetSet">
                        <argument type="constant">NULL</argument>
                        <argument type="service" id="logging.handler.input"/>
                    </call>
                </service>
            </argument>
        </service>

        <service id="logging.logger.output" class="%logging.classes.logger%">
            <argument>Erebot</argument>
            <argument>LineIO</argument>
            <argument>write</argument>
            <argument type="service">
                <service class="\Plop\HandlersCollection">
                    <call method="offsetSet">
                        <argument type="constant">NULL</argument>
                        <argument type="service" id="logging.handler.output"/>
                    </call>
                </service>
            </argument>
        </service>

        <service id="logging.logger.root" class="%logging.classes.logger%">
            <argument type="constant">NULL</argument>
            <argument type="constant">NULL</argument>
            <argument type="constant">NULL</argument>
            <argument type="service">
                <service class="\Plop\HandlersCollection">
                    <call method="offsetSet">
                        <argument type="constant">NULL</argument>
                        <argument type="service" id="logging.handler.detailed"/>
                    </call>
                </service>
            </argument>
        </service>

        <service id="logging">
            <factory class="\Plop\Plop" method="getInstance"/>
            <call method="addLogger">
                <argument type="service" id="logging.logger.root"/>
                <argument type="service" id="logging.logger.input"/>
                <argument type="service" id="logging.logger.output"/>
            </call>
        </service>

        <service id="bot" synthetic="true"/>

        <service id="factory.connection" class="%core.classes.connection_factory%">
            <argument>%core.classes.connection%</argument>
            <argument type="collection">
                <argument key="\Erebot\Interfaces\Event\Ban">\Erebot\Event\Ban</argument>
                <argument key="\Erebot\Interfaces\Event\ChanAction">\Erebot\Event\ChanAction</argument>
                <argument key="\Erebot\Interfaces\Event\ChanAction">\Erebot\Event\ChanAction</argument>
                <argument key="\Erebot\Interfaces\Event\ChanCtcp">\Erebot\Event\ChanCtcp</argument>
                <argument key="\Erebot\Interfaces\Event\ChanCtcpReply">\Erebot\Event\ChanCtcpReply</argument>
                <argument key="\Erebot\Interfaces\Event\ChanNotice">\Erebot\Event\ChanNotice</argument>
                <argument key="\Erebot\Interfaces\Event\ChanText">\Erebot\Event\ChanText</argument>
                <argument key="\Erebot\Interfaces\Event\Connect">\Erebot\Event\Connect</argument>
                <argument key="\Erebot\Interfaces\Event\DeHalfop">\Erebot\Event\DeHalfop</argument>
                <argument key="\Erebot\Interfaces\Event\DeOp">\Erebot\Event\DeOp</argument>
                <argument key="\Erebot\Interfaces\Event\DeOwner">\Erebot\Event\DeOwner</argument>
                <argument key="\Erebot\Interfaces\Event\DeProtect">\Erebot\Event\DeProtect</argument>
                <argument key="\Erebot\Interfaces\Event\DeVoice">\Erebot\Event\DeVoice</argument>
                <argument key="\Erebot\Interfaces\Event\Disconnect">\Erebot\Event\Disconnect</argument>
                <argument key="\Erebot\Interfaces\Event\Error">\Erebot\Event\Error</argument>
                <argument key="\Erebot\Interfaces\Event\Except">\Erebot\Event\Except</argument>
                <argument key="\Erebot\Interfaces\Event\ExitEvent">\Erebot\Event\ExitEvent</argument>
                <argument key="\Erebot\Interfaces\Event\Halfop">\Erebot\Event\Halfop</argument>
                <argument key="\Erebot\Interfaces\Event\Invite">\Erebot\Event\Invite</argument>
                <argument key="\Erebot\Interfaces\Event\Join">\Erebot\Event\Join</argument>
                <argument key="\Erebot\Interfaces\Event\Kick">\Erebot\Event\Kick</argument>
                <argument key="\Erebot\Interfaces\Event\Logon">\Erebot\Event\Logon</argument>
                <argument key="\Erebot\Interfaces\Event\Nick">\Erebot\Event\Nick</argument>
                <argument key="\Erebot\Interfaces\Event\Notify">\Erebot\Event\Notify</argument>
                <argument key="\Erebot\Interfaces\Event\Op">\Erebot\Event\Op</argument>
                <argument key="\Erebot\Interfaces\Event\Owner">\Erebot\Event\Owner</argument>
                <argument key="\Erebot\Interfaces\Event\Part">\Erebot\Event\Part</argument>
                <argument key="\Erebot\Interfaces\Event\Ping">\Erebot\Event\Ping</argument>
                <argument key="\Erebot\Interfaces\Event\Pong">\Erebot\Event\Pong</argument>
                <argument key="\Erebot\Interfaces\Event\PrivateAction">\Erebot\Event\PrivateAction</argument>
                <argument key="\Erebot\Interfaces\Event\PrivateCtcp">\Erebot\Event\PrivateCtcp</argument>
                <argument key="\Erebot\Interfaces\Event\PrivateCtcpReply">\Erebot\Event\PrivateCtcpReply</argument>
                <argument key="\Erebot\Interfaces\Event\PrivateNotice">\Erebot\Event\PrivateNotice</argument>
                <argument key="\Erebot\Interfaces\Event\PrivateText">\Erebot\Event\PrivateText</argument>
                <argument key="\Erebot\Interfaces\Event\Protect">\Erebot\Event\Protect</argument>
                <argument key="\Erebot\Interfaces\Event\Quit">\Erebot\Event\Quit</argument>
                <argument key="\Erebot\Interfaces\Event\Numeric">\Erebot\Event\Numeric</argument>
                <argument key="\Erebot\Interfaces\Event\RawMode">\Erebot\Event\RawMode</argument>
                <argument key="\Erebot\Interfaces\Event\Topic">\Erebot\Event\Topic</argument>
                <argument key="\Erebot\Interfaces\Event\UnBan">\Erebot\Event\UnBan</argument>
                <argument key="\Erebot\Interfaces\Event\UnExcept">\Erebot\Event\UnExcept</argument>
                <argument key="\Erebot\Interfaces\Event\UnNotify">\Erebot\Event\UnNotify</argument>
                <argument key="\Erebot\Interfaces\Event\UserMode">\Erebot\Event\UserMode</argument>
                <argument key="\Erebot\Interfaces\Event\Voice">\Erebot\Event\Voice</argument>
            </argument>
        </service>

<!--        <service id="identd" class="\Erebot\Identd\Server">-->
<!--            <argument type="service" id="bot"/>-->
<!--            <argument>0.0.0.0:113</argument>-->
<!--            <argument>\Erebot\Identd\Worker</argument>-->
<!--        </service>-->
    </services>
</container>
