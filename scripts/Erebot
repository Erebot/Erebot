#!/usr/bin/env php
<?php
/*
    This file is part of Erebot.

    Erebot is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Erebot is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Erebot.  If not, see <http://www.gnu.org/licenses/>.
*/

function Erebot_autoloader($className)
{
    $class = ltrim($className, '\\');
    $path = str_replace(array('\\', '_'), DIRECTORY_SEPARATOR, $class);

    // When running from the trunk.
    if ('@php_dir@' == '@'.'php_dir'.'@') {
        $parts = explode(DIRECTORY_SEPARATOR, $path);
        $repos_root = dirname(dirname(dirname(dirname(__FILE__))));
        if (count($parts) > 2 && $parts[2] != 'Base' &&
            array_slice($parts, 0, 2) == array('Erebot', 'Module'))
            array_unshift($parts, $repos_root, 'modules', $parts[2], 'trunk', 'src');
        else if ($parts[0] == 'Plop')
            array_unshift($parts, $repos_root, 'logging', 'trunk', 'src');
        else if ($parts[0] == 'Erebot')
            array_unshift($parts, $repos_root, 'core', 'trunk', 'src');
        // Otherwise, the path gets restored to its previous state,
        // where PHP uses the usual include_path to locate the file.
        $path = implode(DIRECTORY_SEPARATOR, $parts);
    }
    // When running from a pear/pyrus installation.
    else array_unshift($parts, '@php_dir@');

    $path .= '.php';
    if (($fp = @fopen($path, 'rb', TRUE)) !== FALSE) {
        fclose($fp);
        unset($fp);
        include_once($path);
    }
}

// Register the autoloader, using whatever's available.
if (function_exists('spl_autoload_register'))
    spl_autoload_register('Erebot_autoloader');
else {
    function __autoload($class)
    {
        return Erebot_autoloader($class);
    }
}

if (!function_exists('ctype_digit')) {
    function ctype_digit($s) {
        if (!is_string($s))
            return FALSE;
        $len = strlen($s);
        if (!$len)
            return FALSE;
        return strspn($s, '1234567890') == $len;
    }
}

class   StoreProxy_Action
extends Console_CommandLine_Action
{
    public function setResult($option, $result)
    {
        $this->result->options[$option] = $result;
    }

    public function execute($value = FALSE, $params = array())
    {
        $this->setResult($params['option'], FALSE);
    }
}

class   Console_CommandLine_MyOption
extends Console_CommandLine_Option
{
    public function expectsArgument()
    {
        return FALSE;
    }
}

// For older versions of PHP that support signals
// but don't support pcntl_signal_dispatch (5.2.x).
if (!function_exists('pcntl_signal_dispatch'))
    declare(ticks=1);
Erebot_CLI::run();

