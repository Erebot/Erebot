#!/usr/bin/env php
<?php
/*
    This file is part of Erebot.

    Erebot is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Erebot is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Erebot.  If not, see <http://www.gnu.org/licenses/>.
*/

// When running from a clone.
if ('@php_dir@' == '@'.'php_dir'.'@') {
    require(
        dirname(dirname(__FILE__)) . DIRECTORY_SEPARATOR .
        'vendor' . DIRECTORY_SEPARATOR .
        'Erebot_API' . DIRECTORY_SEPARATOR .
        'src' . DIRECTORY_SEPARATOR .
        'Erebot' . DIRECTORY_SEPARATOR .
        'Autoload.php'
    );

    // Add Erebot's sources to the Autoloader.
    $base = dirname(dirname(__FILE__)) . DIRECTORY_SEPARATOR;
    Erebot_Autoload::initialize($base . "src");

    // Add vendor sources too.
    $base .= "vendor";
    foreach (scandir($base) as $path) {
        if (trim($path, '.') == '')
            continue;
        $path = $base . DIRECTORY_SEPARATOR .
                $path . DIRECTORY_SEPARATOR;
        if (is_dir($path . 'src'))
            Erebot_Autoload::initialize($path . 'src');
        if (is_dir($path . 'lib'))  // for sfService.
            Erebot_Autoload::initialize($path . 'lib');
    }
    // Register include_path with the Autoloader.
    foreach (explode(PATH_SEPARATOR, get_include_path()) as $path)
        Erebot_Autoload::initialize($path);
}
// Otherwise, we're probably in Pyrus/PEAR.
else {
    require('Erebot/Autoload.php');
    Erebot_Autoload::initialize('@php_dir@');
}

// Quick replacement for ctype_digit in case
// PHP was compiled with --disable-ctype.
if (!function_exists('ctype_digit')) {
    function ctype_digit($s) {
        if (!is_string($s))
            return FALSE;
        $len = strlen($s);
        if (!$len)
            return FALSE;
        return strspn($s, '1234567890') == $len;
    }
}

// For older versions of PHP that support signals
// but don't support pcntl_signal_dispatch (5.2.x).
if (!function_exists('pcntl_signal_dispatch'))
    declare(ticks=1);
Erebot_CLI::run();

